---
- name: Set success flag to true
  set_fact:
    success: true

- name: Run oc command
  command: >-
    oc {{ oc_command }}
  failed_when: false
  register: r_oc_command

- name: Show oc command output
  debug:
    var: r_oc_command
    verbosity: 2

- name: Fail on command return code
  set_fact:
    success: false
    student_error_message: >-
      {{ oc_command_description }}
      {% if _oc_command_expect_failure %}should have {% endif %}failed
  when: >-
    _oc_command_check_rc and (
      ( r_oc_command.rc == 0 and _oc_command_expect_failure ) or
      ( r_oc_command.rc != 0 and not _oc_command_expect_failure )
    )

######################################################
#                                                    #
# Common boiler plate logging logic - Do not modify  #
#                                                    #
######################################################

- name: Create Pass logging message
  when: success | bool
  set_fact:
    output_message: "PASS: {{ task_description_message }}"
  delegate_to: localhost

- name: Create Fail logging message
  when: not success | bool
  set_fact:
    output_message: "FAIL: {{ task_description_message }}: {{ student_error_message|d('')}}"
  delegate_to: localhost

- name: Import logging tasks
  import_role:
    name: ftl_run_log_grade_to_log
  vars:
    grader_output_message: "{{ output_message }}"
